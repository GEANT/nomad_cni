# variables source from the main script cni-vxlan-wizard.sh
vxlan_id=<%= $vxlan_id %>
vxlan_ip="<%= $vxlan_ip %>"
vxlan_network="<%= $vxlan_ip %>/<%= $vxlan_netmask %>"

# delete vxlan and bridge interface if they exist
ip address show dev vx<%= $vxlan_id %> &>/dev/null && ip link delete vx<%= $vxlan_id %>
ip address show dev br<%= $vxlan_id %> &>/dev/null && ip link delete br<%= $vxlan_id %>

# create vxlan interface
ip link add vx<%= $vxlan_id %> type vxlan id <%= $vxlan_id %> dev <%= $iface %> dstport 4789 local <%= $agent_ip %><% if ($nolearning) { %> nolearning<% } %>
ip link set dev vx<%= $vxlan_id %> address <%= $vxlan_mac_address %>

# populate bridge DB
/opt/cni/vxlan/unicast-bridge-fdb.d/<%= $cni_name %>-bridge-fdb.sh

# bring up the vxlan interface
ip link set up dev vx<%= $vxlan_id %>

# bring up the bridge
brctl addbr br<%= $vxlan_id %>
brctl addif br<%= $vxlan_id %> vx<%= $vxlan_id %>
ip link set dev br<%= $vxlan_id %> address <%= $br_mac_address %>
# ip addr add <%= $vxlan_ip %>/<%= $vxlan_netmask %> dev br<%= $vxlan_id %> # we could use this one, but we have to delete the default route
ip link set dev br<%= $vxlan_id %> up

# add default route to Ingress VIP
ip route add <%= $vxlan_ip %>/<%= $vxlan_netmask %> via <%= $vip_address %>
